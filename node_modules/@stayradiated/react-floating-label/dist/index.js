'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FloatingLabel = function (_React$Component) {
  _inherits(FloatingLabel, _React$Component);

  function FloatingLabel(props) {
    _classCallCheck(this, FloatingLabel);

    var _this = _possibleConstructorReturn(this, (FloatingLabel.__proto__ || Object.getPrototypeOf(FloatingLabel)).call(this, props));

    _this.state = { hasValue: false, hasError: false };

    _this.onBlur = _this.onBlur.bind(_this);
    _this.onChange = _this.onChange.bind(_this);
    return _this;
  }

  _createClass(FloatingLabel, [{
    key: 'onBlur',
    value: function onBlur(event) {
      this.setState({
        hasValue: !!event.currentTarget.value
      });
    }
  }, {
    key: 'onChange',
    value: function onChange(event) {
      var _props = this.props,
          pattern = _props.pattern,
          onChange = _props.onChange;

      if (pattern != null) {
        this.setState({
          hasError: !pattern.test(event.currentTarget.value),
          hasValue: !!event.currentTarget.value
        });
      }
      onChange && onChange(event);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          errorMsg = _props2.errorMsg,
          id = _props2.id,
          pattern = _props2.pattern,
          placeholder = _props2.placeholder,
          inputProps = _objectWithoutProperties(_props2, ['errorMsg', 'id', 'pattern', 'placeholder']);

      var _state = this.state,
          hasValue = _state.hasValue,
          hasError = _state.hasError;


      var inputClasses = (0, _classnames2.default)('fl-input', {
        'fl-valid': hasValue && !hasError,
        'fl-invalid': hasValue && hasError
      });

      var errMsgClasses = (0, _classnames2.default)({
        'fl-error-msg': errorMsg,
        'fl-error-show': hasError && hasValue && errorMsg && pattern
      });

      return _react2.default.createElement(
        'div',
        { className: 'fl-input-container' },
        _react2.default.createElement('input', _extends({}, inputProps, {
          className: inputClasses,
          id: id,
          onBlur: this.onBlur,
          onChange: this.onChange
        })),
        _react2.default.createElement(
          'label',
          { className: 'fl-input-label', htmlFor: id },
          placeholder
        ),
        _react2.default.createElement('span', { className: 'fl-input-bar' }),
        errorMsg && _react2.default.createElement(
          'span',
          { className: errMsgClasses },
          errorMsg
        )
      );
    }
  }]);

  return FloatingLabel;
}(_react2.default.Component);

FloatingLabel.propTypes = {
  errorMsg: _react.PropTypes.string,
  placeholder: _react.PropTypes.string.isRequired,
  pattern: _react.PropTypes.instanceOf(RegExp),
  id: _react.PropTypes.string.isRequired,
  onChange: _react.PropTypes.func
};
exports.default = FloatingLabel;


FloatingLabel.defaultProps = {
  id: 'text-box',
  placeholder: 'name'
};